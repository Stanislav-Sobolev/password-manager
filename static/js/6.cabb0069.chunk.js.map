{"version":3,"sources":["components/Filter/Filter.jsx","components/PasswordList/PasswordItem.jsx","components/PasswordList/PasswordList.jsx","components/PasswordForm/PasswordForm.jsx","components/Passwords/Passwords.jsx"],"names":["Filter","_ref","filterState","handleFilter","react_default","a","createElement","Fragment","InputLabel","Input","type","name","value","onChange","e","target","PasswordItem","item","onDelete","_useState","useState","_useState2","Object","slicedToArray","hidePass","setHidePass","PasswordManager_styled","number","IconButton","onClick","size","VisibilityOff_default","style","fontSize","Visibility_default","id","DeleteOutlined_default","PasswordList","filteredArr","data","useGetPasswordsQuery","_useDeletePasswordMut","useDeletePasswordMutation","deletePassword","map","PasswordItem_PasswordItem","key","schema","yup","shape","min","matches","required","pass","PasswordForm","onSubmit","password","showPassword","passwordShown","setPasswordShown","formik_esm","initialValues","validationSchema","component","Error","autoComplete","objectSpread","propTypes","PropTypes","object","func","passwords","array","string","Passwords","filter","setFilter","items","_useAddPasswordMutati","useAddPasswordMutation","addPassword","handleSubmit","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","resetForm","newPassword","wrap","_context","prev","next","find","el","toLowerCase","includes","sent","alert","concat","t0","message","stop","_x","_x2","apply","this","arguments","visiblePasswords","PasswordForm_PasswordForm","Filter_Filter","PasswordList_PasswordList"],"mappings":"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","file":"static/js/6.cabb0069.chunk.js","sourcesContent":["import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport const Filter = ({ filterState, handleFilter }) => {\n  return (\n    <>\n      <InputLabel>Find website by name</InputLabel>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterState}\n        onChange={e => handleFilter(e.target.value)}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  PasswordItemWrapper,\n  StyledHidePass,\n  StyledShowPass,\n  PasswordIconsWrapper,\n} from '../Passwords/PasswordManager.styled';\n\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Visibility from '@material-ui/icons/Visibility';\n\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nexport const PasswordItem = ({ item, onDelete }) => {\n  const [hidePass, setHidePass] = useState(true);\n\n  const hidePassHandler = () => {\n    setHidePass(!hidePass);\n  };\n\n  return (\n    <PasswordIconsWrapper>\n      <PasswordItemWrapper>\n        {item.name}:&nbsp;\n        {hidePass ? (\n          <StyledHidePass>{item.number}</StyledHidePass>\n        ) : (\n          <StyledShowPass>{item.number}</StyledShowPass>\n        )}\n      </PasswordItemWrapper>\n      <div>\n        <IconButton onClick={hidePassHandler} size=\"small\">\n          {hidePass ? (\n            <VisibilityOff style={{ fontSize: '18px' }} />\n          ) : (\n            <Visibility style={{ fontSize: '18px' }} />\n          )}\n        </IconButton>\n        <IconButton onClick={() => onDelete(item.id)} size=\"small\">\n          <DeleteOutlinedIcon fontSize=\"small\" />\n        </IconButton>\n      </div>\n    </PasswordIconsWrapper>\n  );\n};\n","import React from 'react';\nimport { StyledList } from '../Passwords/PasswordManager.styled';\n\nimport { useGetPasswordsQuery, useDeletePasswordMutation } from '../store';\nimport { PasswordItem } from './PasswordItem';\n\nexport const PasswordList = ({ filteredArr }) => {\n  const { data } = useGetPasswordsQuery();\n  const [deletePassword] = useDeletePasswordMutation();\n\n  return (\n    <StyledList>\n      {data && (\n        <>\n          {filteredArr.map(item => (\n            <PasswordItem key={item.id} item={item} onDelete={deletePassword} />\n          ))}\n        </>\n      )}\n    </StyledList>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport {\n  ButtonStyled,\n  FormStyled,\n  LabelStyled,\n  FieldStyled,\n  Error,\n  PassFieldWrapper,\n} from '../Passwords/PasswordManager.styled';\n\nlet schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'must be at least 2 characters long')\n    .matches(\n      /^[0-9aA-zZ.!@#$%^&*\\s]+$/,\n      'Name may contain only numbers, dot and letters. For example yoursite123.com'\n    )\n    .required(),\n  pass: yup.mixed().required(),\n});\n\nexport const PasswordForm = ({ onSubmit }) => {\n  const [passwordShown, setPasswordShown] = useState({\n    password: '',\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setPasswordShown({\n      ...passwordShown,\n      showPassword: !passwordShown.showPassword,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', pass: '' }}\n      onSubmit={onSubmit}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <LabelStyled>Website</LabelStyled>\n        <FieldStyled type=\"text\" name=\"name\" />\n        <ErrorMessage name=\"name\" component={Error} />\n        <LabelStyled>Password</LabelStyled>\n        <PassFieldWrapper>\n          <FieldStyled\n            type={passwordShown.showPassword ? 'text' : 'password'}\n            name=\"pass\"\n            autoComplete=\"off\"\n          />\n          <IconButton onClick={handleClickShowPassword} size=\"small\">\n            {passwordShown.showPassword ? (\n              <Visibility style={{ fontSize: '18px' }} />\n            ) : (\n              <VisibilityOff style={{ fontSize: '18px' }} />\n            )}\n          </IconButton>\n        </PassFieldWrapper>\n        <ErrorMessage name=\"pass\" component={Error} />\n\n        <ButtonStyled type=\"submit\">Add Password</ButtonStyled>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { HeadTitle, PasswordPageWrapper } from './PasswordManager.styled';\nimport { Filter } from '../Filter/Filter';\nimport { PasswordList } from '../PasswordList/PasswordList';\nimport { PasswordForm } from '../PasswordForm/PasswordForm';\nimport { useGetPasswordsQuery, useAddPasswordMutation } from '../store';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst Passwords = () => {\n  const [filter, setFilter] = useState('');\n\n  const { data: items } = useGetPasswordsQuery();\n  const [addPassword] = useAddPasswordMutation();\n\n  const handleSubmit = async (e, { resetForm }) => {\n    try {\n      if (\n        await items.find(el =>\n          el.name.toLowerCase().includes(e.name.toLowerCase())\n        )\n      ) {\n        alert(`${e.name} is already in passwords.`);\n      } else {\n        const newPassword = {\n          name: e.name,\n          number: e.pass,\n        };\n\n        await addPassword(newPassword);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n\n    resetForm();\n  };\n\n  const handleFilter = e => {\n    setFilter(e);\n  };\n\n  const getVisiblePasswords = () => {\n    let result;\n    if (items) {\n      result = items.filter(el =>\n        el.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      result = items;\n    }\n\n    return result;\n  };\n\n  const visiblePasswords = getVisiblePasswords();\n\n  return (\n    <PasswordPageWrapper>\n      <HeadTitle>Add Password</HeadTitle>\n\n      <PasswordForm onSubmit={handleSubmit} />\n      <HeadTitle>Passwords</HeadTitle>\n\n      <Filter filterState={filter} handleFilter={handleFilter} />\n\n      {items && <PasswordList filteredArr={visiblePasswords} />}\n    </PasswordPageWrapper>\n  );\n};\n\nPasswordForm.propTypes = {\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nFilter.propTypes = {\n  passwords: PropTypes.array,\n  filterState: PropTypes.string,\n  handleFilter: PropTypes.func,\n};\n\nPasswordList.propTypes = {\n  filteredArr: PropTypes.array,\n};\n\nexport default Passwords;\n"],"sourceRoot":""}